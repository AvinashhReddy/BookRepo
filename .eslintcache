[{"E:\\otherProjects\\bookstore\\src\\index.js":"1","E:\\otherProjects\\bookstore\\src\\reportWebVitals.js":"2","E:\\otherProjects\\bookstore\\src\\App.js":"3"},{"size":547,"mtime":1611471689172,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":3876,"mtime":1611496538930,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"3is655",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"E:\\otherProjects\\bookstore\\src\\index.js",[],["16","17"],"E:\\otherProjects\\bookstore\\src\\reportWebVitals.js",[],"E:\\otherProjects\\bookstore\\src\\App.js",["18","19"],"import { Button ,Form,Card} from 'react-bootstrap';\nimport './App.css';\nimport axios from 'axios'\nimport {useState,useEffect} from 'react'\n\nimport ReactStars from \"react-rating-stars-component\";\n\nfunction App() {\n  \nconst [books,setBooks]=useState()\nconst [searchValue,setSearchValue]=useState()\nconst [cart,setCart]=useState([])\nconst [flag,setFlag]=useState(true)\nuseEffect(async()=>{\n  \n await axios.get('./data.json')\n .then((res)=>{\n   console.log(res.data);\n   setBooks(res.data)\n }).catch((err)=>{\n   console.log(err);\n })\n\n}\n,[])\nif(!books){\n  return <h1 style={{textAlign:'center',paddingTop:'18vw'}}>Loading data...please wait for sometime</h1>\n}\nconst setSearch=(event)=>{\n  \n  setSearchValue(event.target.value)\n}\n\nconst addtoCart=(event,index)=>{\nvar a=[...cart]\na.push(index)\nsetCart(a)\n}\nfunction compareByPrice( a, b ) {\n  if ( a.price < b.price ){\n    return -1;\n  }\n  if ( a.price > b.price ){\n    return 1;\n  }\n  return 0;\n}\n\nconst sortby=(event)=>{\n  if(event.target.value==\"htol\"){\n    books.sort(compareByPrice)\n \n  let a=[...books]\n  \n  setBooks(a.reverse())\n  }\n  else{\n    books.sort(compareByPrice)\n    let a=[...books]\n    \n  setBooks(a)\n  }\n  \n\n} \n\n  return (\n    <div >\n      <h1 style={{textAlign:'center',padding:'2vw'}}>Book Repo</h1>\n      <div style={{paddingTop:'0vw',paddingLeft:'4vw',display:'inline-block'}}>\n        <h5>Sort by :</h5>\n        <select onChange={(event)=>sortby(event)}>\n  <option value=\"-\">-</option>\n  <option value=\"htol\">price(high to low)</option>\n  <option value=\"ltoh\">price(low to high)</option>\n  \n</select>\n</div>\n<div style={{display:'inline-block', paddingLeft:'63vw'}}>\n<Button onClick={(event)=>{setFlag(false)}}>Cart({cart.length})</Button>\n</div>\n<div style={{display:'inline-block', paddingLeft:'1vw'}}>\n<Button>CheckOut</Button>\n</div>\n\n<div style={{paddingLeft:'4vw',paddingTop:'1vw',paddingRight:'6vw'}}>\n<Form.Control type=\"email\" placeholder=\"Search Books by title\" onChange={(event)=>{setSearch(event)}} />\n</div>\n\n{flag && <>\n{books.map((book,index)=>{\n  return (<div>\n{ new RegExp(searchValue,\"i\").test(book.title) &&  <div style={{paddingLeft:'4vw',paddingRight:'6vw',paddingTop:'1vw'}}>\n   <Card >\n  <Card.Header as=\"h5\">{book.title}</Card.Header>\n  <Card.Body>\n    \n    <Card.Text>\n      <h5>authors : {book.authors}</h5>\n      \n      <h5>average rating :  <ReactStars\n    count={5}\n    isHalf={true}\n    size={24}\n    value={book.average_rating}\n    \n    \n    activeColor=\"#ffd700\"\n  /></h5>\n  <h5>isbn : {book.isbn}</h5>\n  <h5>language code : {book.language_code}</h5>\n  <h5>number of ratings : {book.ratings_count}</h5>\n  <h5>price : {book.price} $</h5>\n    </Card.Text>\n    <Button variant=\"primary\" onClick={(event)=>addtoCart(event,index)}> Add to cart</Button>\n  </Card.Body>\n</Card>\n    </div> }\n    </div>\n  )\n})\n  } </>}\n\n  {!flag && \n  <>\n  <div style={{paddingLeft:'87vw',paddingTop:'1vw'}}><Button onClick={(event)=>{setFlag(true)}}>GoBack</Button></div>\n  <h3 style={{paddingLeft:'4vw',paddingtop:'1vw'}}>Items in your Cart :</h3>\n  {cart.map((index)=>{\n    let book=books[index]\n    return (<div>\n  { new RegExp(searchValue,\"i\").test(book.title) &&  <div style={{paddingLeft:'4vw',paddingRight:'6vw',paddingTop:'1vw'}}>\n     <Card >\n    <Card.Header as=\"h5\">{book.title}</Card.Header>\n    <Card.Body>\n      \n      <Card.Text>\n        <h5>authors : {book.authors}</h5>\n        \n        <h5>average rating :  <ReactStars\n      count={5}\n      isHalf={true}\n      size={24}\n      value={book.average_rating}\n      \n      \n      activeColor=\"#ffd700\"\n    /></h5>\n    <h5>isbn : {book.isbn}</h5>\n    <h5>language code : {book.language_code}</h5>\n    <h5>number of ratings : {book.ratings_count}</h5>\n    <h5>price : {book.price} $</h5>\n      </Card.Text>\n      \n    </Card.Body>\n  </Card>\n      </div> }\n      </div>\n    )\n  })\n    } </>\n  \n  }\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":14,"column":11,"nodeType":"26","endLine":24,"endColumn":2},{"ruleId":"27","severity":1,"message":"28","line":50,"column":24,"nodeType":"29","messageId":"30","endLine":50,"endColumn":26},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]